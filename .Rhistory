library(fpp3)
credit <- read.csv("credit.csv")
credit$Period <- yearmonth(credit$Period)
# Convert to tsibble
credit <- tsibble(credit)
class(train)
class(credit)
library(fpp3)
credit <- read.csv("credit.csv")
credit$Period <- yearmonth(credit$Period)
# Convert to tsibble
credit <- tsibble(credit)
class(credit)
credit <- read.csv("credit.csv")
credit$Period <- yearmonth(credit$Period)
# Convert to tsibble
credit <- tsibble(credit)
class(credit)
View(credit)
credit <- read.csv("credit.csv")
View(credit)
credit$Period <- yearmonth(credit$Period)
# Convert to tsibble
credit <- tsibble(credit)
library(fpp3)
credit <- read.csv("credit.csv")
credit$Period <- yearmonth(credit$Period)
# Convert to tsibble
credit <- tsibble(credit)
library(fpp3)
credit <- read.csv("credit.csv")
credit$Period <- yearmonth(credit$Period)
# Convert to tsibble
credit <- tsibble(credit)
View(credit)
class(credit)
cluster <- makeCluster(detectCores() - 1) #Line 1 for parallelization
registerDoParallel(cluster) #Line 2 for parallelization
train %>% stretch_tsibble(.init = 48, .step = 24) %>%
model(NNET = NNETAR(ï..credit_in_millions),
arima210 = ARIMA(ï..credit_in_millions ~ pdq(2,1,0)),
arima013 = ARIMA(ï..credit_in_millions ~ pdq(0,1,3)),
stepwise = ARIMA(ï..credit_in_millions),
search = ARIMA(ï..credit_in_millions, stepwise=FALSE),
ExponentialSmoothing = ETS(ï..credit_in_millions ~ error("A") + trend("N") + season("N"))) -> fit3
fit3 %>% forecast(h = 12) %>% accuracy(credit)
stopCluster(cluster) #Line 3 for parallelization
library(fpp3)
library(parallel)
library(doParallel)
cluster <- makeCluster(detectCores() - 1) #Line 1 for parallelization
registerDoParallel(cluster) #Line 2 for parallelization
train %>% stretch_tsibble(.init = 48, .step = 24) %>%
model(NNET = NNETAR(ï..credit_in_millions),
arima210 = ARIMA(ï..credit_in_millions ~ pdq(2,1,0)),
arima013 = ARIMA(ï..credit_in_millions ~ pdq(0,1,3)),
stepwise = ARIMA(ï..credit_in_millions),
search = ARIMA(ï..credit_in_millions, stepwise=FALSE),
ExponentialSmoothing = ETS(ï..credit_in_millions ~ error("A") + trend("N") + season("N"))) -> fit3
fit3 %>% forecast(h = 12) %>% accuracy(credit)
stopCluster(cluster) #Line 3 for parallelization
train <- credit[1:480,]
holdout <- credit [481:492,]
# ALL MODELS FIT AND TESTED VIA Cross Validation
cluster <- makeCluster(detectCores() - 1) #Line 1 for parallelization
registerDoParallel(cluster) #Line 2 for parallelization
train %>% stretch_tsibble(.init = 48, .step = 24) %>%
model(NNET = NNETAR(ï..credit_in_millions),
arima210 = ARIMA(ï..credit_in_millions ~ pdq(2,1,0)),
arima013 = ARIMA(ï..credit_in_millions ~ pdq(0,1,3)),
stepwise = ARIMA(ï..credit_in_millions),
search = ARIMA(ï..credit_in_millions, stepwise=FALSE),
ExponentialSmoothing = ETS(ï..credit_in_millions ~ error("A") + trend("N") + season("N"))) -> fit3
fit3 %>% forecast(h = 12) %>% accuracy(credit)
stopCluster(cluster) #Line 3 for parallelization
